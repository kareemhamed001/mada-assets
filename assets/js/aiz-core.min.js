
$.fn.toggleAttr = function (a, t, l) {
    return this.each(function () {
        var o = $(this);
        o.attr(a) == t ? o.attr(a, l) : o.attr(a, t)
    })
}, function ($) {
    "use strict";
    AIZ.data = {
        csrf: $('meta[name="csrf-token"]').attr("content"),
        appUrl: $('meta[name="app-url"]').attr("content"),
        fileBaseUrl: $('meta[name="file-base-url"]').attr("content")
    }, AIZ.uploader = {
        data: {
            selectedFiles: [],
            selectedFilesObject: [],
            clickedForDelete: null,
            allFiles: [],
            multiple: !1,
            type: "all",
            next_page_url: null,
            prev_page_url: null,
            uploadedFiles: null,
            inputId: null,
            inputElem: null
        }, removeInputValue: function (a, t, l) {
            var o = t.filter(function (t) {
                return t !== a
            });
            o.length > 0 ? $(l).find(".file-amount").html(AIZ.uploader.updateFileHtml(o)) : l.find(".file-amount").html(AIZ.local.choose_file), $(l).find(".selected-files").val(o)
        }, removeAttachment: function () {
            $(document).on("click", ".remove-attachment", function () {
                var a = $(this).closest(".file-preview-item").data("id"),
                    t = $(this).closest(".file-preview").prev('[data-toggle="aizuploader"]').find(".selected-files").val().split(",").map(Number);
                AIZ.uploader.removeInputValue(a, t, $(this).closest(".file-preview").prev('[data-toggle="aizuploader"]')), $(this).closest(".file-preview-item").remove()
            })
        }, deleteUploaderFile: function () {
            $(".aiz-uploader-delete").each(function () {
                $(this).on("click", function (a) {
                    a.preventDefault();
                    var t = $(this).data("id");
                    AIZ.uploader.data.clickedForDelete = t, $("#aizUploaderDelete").modal("show"), $(".aiz-uploader-confirmed-delete").on("click", function (a) {
                        if (a.preventDefault(), 1 === a.detail) {
                            var t = AIZ.uploader.data.allFiles[AIZ.uploader.data.allFiles.findIndex(a => a.id === AIZ.uploader.data.clickedForDelete)];
                            $.ajax({
                                url: AIZ.data.appUrl + "/aiz-uploader/destroy/" + AIZ.uploader.data.clickedForDelete,
                                type: "DELETE",
                                dataType: "JSON",
                                data: {
                                    id: AIZ.uploader.data.clickedForDelete,
                                    _method: "DELETE",
                                    _token: AIZ.data.csrf
                                },
                                success: function () {
                                    AIZ.uploader.data.selectedFiles = AIZ.uploader.data.selectedFiles.filter(function (a) {
                                        return a !== AIZ.uploader.data.clickedForDelete
                                    }), AIZ.uploader.data.selectedFilesObject = AIZ.uploader.data.selectedFilesObject.filter(function (a) {
                                        return a !== t
                                    }), AIZ.uploader.updateUploaderSelected(), AIZ.uploader.getAllUploads(AIZ.data.appUrl + "/aiz-uploader/get_uploaded_files"), AIZ.uploader.data.clickedForDelete = null, $("#aizUploaderDelete").modal("hide")
                                }
                            })
                        }
                    })
                })
            })
        }, uploadSelect: function () {
            $(".aiz-uploader-select").each(function () {
                var a = $(this);
                a.on("click", function (t) {
                    var l = $(this).data("value"),
                        o = AIZ.uploader.data.allFiles[AIZ.uploader.data.allFiles.findIndex(a => a.id === l)];
                    a.closest(".aiz-file-box-wrap").toggleAttr("data-selected", "true", "false"), AIZ.uploader.data.multiple || a.closest(".aiz-file-box-wrap").siblings().attr("data-selected", "false"), AIZ.uploader.data.selectedFiles.includes(l) ? (AIZ.uploader.data.selectedFiles = AIZ.uploader.data.selectedFiles.filter(function (a) {
                        return a !== l
                    }), AIZ.uploader.data.selectedFilesObject = AIZ.uploader.data.selectedFilesObject.filter(function (a) {
                        return a !== o
                    })) : (AIZ.uploader.data.multiple || (AIZ.uploader.data.selectedFiles = [], AIZ.uploader.data.selectedFilesObject = []), AIZ.uploader.data.selectedFiles.push(l), AIZ.uploader.data.selectedFilesObject.push(o)), AIZ.uploader.addSelectedValue(), AIZ.uploader.updateUploaderSelected()
                })
            })
        }, updateFileHtml: function (a) {
            var t = "";
            if (a.length > 1) var t = AIZ.local.files_selected; else var t = AIZ.local.file_selected;
            return a.length + " " + t
        }, updateUploaderSelected: function () {
            $(".aiz-uploader-selected").html(AIZ.uploader.updateFileHtml(AIZ.uploader.data.selectedFiles))
        }, clearUploaderSelected: function () {
            $(".aiz-uploader-selected-clear").on("click", function () {
                AIZ.uploader.data.selectedFiles = [], AIZ.uploader.addSelectedValue(), AIZ.uploader.addHiddenValue(), AIZ.uploader.resetFilter(), AIZ.uploader.updateUploaderSelected(), AIZ.uploader.updateUploaderFiles()
            })
        }, resetFilter: function () {
            $('[name="aiz-uploader-search"]').val(""), $('[name="aiz-show-selected"]').prop("checked", !1), $('[name="aiz-uploader-sort"] option[value=newest]').prop("selected", !0)
        }, getAllUploads: function (a, t = null, l = null, o = null) {
            $(".aiz-uploader-all").html('<div class="align-items-center d-flex h-100 justify-content-center w-100"><div class="spinner-border" role="status"></div></div>');
            var i = {};
            null != t && t.length > 0 && (i.search = t), null != l && l.length > 0 ? i.sort = l : i.sort = "newest", $.get(a, i, function (a, t) {
                "string" == typeof a && (a = JSON.parse(a)), AIZ.uploader.data.allFiles = a.data, "select_uploaded" == o && AIZ.uploader.selectUploadedFiles(), AIZ.uploader.allowedFileType(), AIZ.uploader.addSelectedValue(), AIZ.uploader.addHiddenValue(), AIZ.uploader.updateUploaderFiles(), null != a.next_page_url ? (AIZ.uploader.data.next_page_url = a.next_page_url, $("#uploader_next_btn").removeAttr("disabled")) : $("#uploader_next_btn").attr("disabled", !0), null != a.prev_page_url ? (AIZ.uploader.data.prev_page_url = a.prev_page_url, $("#uploader_prev_btn").removeAttr("disabled")) : $("#uploader_prev_btn").attr("disabled", !0)
            })
        }, showSelectedFiles: function () {
            $('[name="aiz-show-selected"]').on("change", function () {
                $(this).is(":checked") ? AIZ.uploader.data.allFiles = AIZ.uploader.data.selectedFilesObject : AIZ.uploader.getAllUploads(AIZ.data.appUrl + "/aiz-uploader/get_uploaded_files"), AIZ.uploader.updateUploaderFiles()
            })
        }, searchUploaderFiles: function () {
            $('[name="aiz-uploader-search"]').on("keyup", function () {
                var a = $(this).val();
                AIZ.uploader.getAllUploads(AIZ.data.appUrl + "/aiz-uploader/get_uploaded_files", a, $('[name="aiz-uploader-sort"]').val())
            })
        }, sortUploaderFiles: function () {
            $('[name="aiz-uploader-sort"]').on("change", function () {
                var a = $(this).val();
                AIZ.uploader.getAllUploads(AIZ.data.appUrl + "/aiz-uploader/get_uploaded_files", $('[name="aiz-uploader-search"]').val(), a)
            })
        }, addSelectedValue: function () {
            for (var a = 0; a < AIZ.uploader.data.allFiles.length; a++) AIZ.uploader.data.selectedFiles.includes(AIZ.uploader.data.allFiles[a].id) ? AIZ.uploader.data.allFiles[a].selected = !0 : AIZ.uploader.data.allFiles[a].selected = !1
        }, addHiddenValue: function () {
            for (var a = 0; a < AIZ.uploader.data.allFiles.length; a++) AIZ.uploader.data.allFiles[a].aria_hidden = !1
        }, allowedFileType: function () {
            "all" !== AIZ.uploader.data.type && (AIZ.uploader.data.allFiles = AIZ.uploader.data.allFiles.filter(function (a) {
                return a.type === AIZ.uploader.data.type
            }))
        }, updateUploaderFiles: function () {
            $(".aiz-uploader-all").html('<div class="align-items-center d-flex h-100 justify-content-center w-100"><div class="spinner-border" role="status"></div></div>');
            var a = AIZ.uploader.data.allFiles;
            setTimeout(function () {
                if ($(".aiz-uploader-all").html(null), a.length > 0) for (var t = 0; t < a.length; t++) {
                    var l = "";
                    l = "image" === a[t].type ? '<img src="' + AIZ.data.fileBaseUrl + a[t].file_name + '" class="img-fit">' : '<i class="la la-file-text"></i>';
                    var o = '<div class="aiz-file-box-wrap" aria-hidden="' + a[t].aria_hidden + '" data-selected="' + a[t].selected + '"><div class="aiz-file-box"><div class="card card-file aiz-uploader-select" title="' + a[t].file_original_name + "." + a[t].extension + '" data-value="' + a[t].id + '"><div class="card-file-thumb">' + l + '</div><div class="card-body"><h6 class="d-flex"><span class="text-truncate title">' + a[t].file_original_name + '</span><span class="ext flex-shrink-0">.' + a[t].extension + "</span></h6><p>" + AIZ.extra.bytesToSize(a[t].file_size) + "</p></div></div></div></div>";
                    $(".aiz-uploader-all").append(o)
                } else $(".aiz-uploader-all").html('<div class="align-items-center d-flex h-100 justify-content-center w-100 nav-tabs"><div class="text-center"><h3>No files found</h3></div></div>');
                AIZ.uploader.uploadSelect(), AIZ.uploader.deleteUploaderFile()
            }, 300)
        }, inputSelectPreviewGenerate: function (a) {
            a.find(".selected-files").val(AIZ.uploader.data.selectedFiles), a.next(".file-preview").html(null), AIZ.uploader.data.selectedFiles.length > 0 ? $.post(AIZ.data.appUrl + "/aiz-uploader/get_file_by_ids", {
                _token: AIZ.data.csrf,
                ids: AIZ.uploader.data.selectedFiles.toString()
            }, function (t) {
                if (a.next(".file-preview").html(null), t.length > 0) {
                    a.find(".file-amount").html(AIZ.uploader.updateFileHtml(t));
                    for (var l = 0; l < t.length; l++) {
                        var o = "";
                        o = "image" === t[l].type ? '<img src="' + AIZ.data.fileBaseUrl + t[l].file_name + '" class="img-fit">' : '<i class="la la-file-text"></i>';
                        var i = '<div class="d-flex justify-content-between align-items-center mt-2 file-preview-item" data-id="' + t[l].id + '" title="' + t[l].file_original_name + "." + t[l].extension + '"><div class="align-items-center align-self-stretch d-flex justify-content-center thumb">' + o + '</div><div class="col body"><h6 class="d-flex"><span class="text-truncate title">' + t[l].file_original_name + '</span><span class="flex-shrink-0 ext">.' + t[l].extension + "</span></h6><p>" + AIZ.extra.bytesToSize(t[l].file_size) + '</p></div><div class="remove"><button class="btn btn-sm btn-link remove-attachment" type="button"><i class="la la-close"></i></button></div></div>';
                        a.next(".file-preview").append(i)
                    }
                } else a.find(".file-amount").html(AIZ.local.choose_file)
            }) : a.find(".file-amount").html(AIZ.local.choose_file)
        }, editorImageGenerate: function (a) {
            if (AIZ.uploader.data.selectedFiles.length > 0) for (var t = 0; t < AIZ.uploader.data.selectedFiles.length; t++) {
                var l = AIZ.uploader.data.allFiles.findIndex(a => a.id === AIZ.uploader.data.selectedFiles[t]), o = "";
                "image" === AIZ.uploader.data.allFiles[l].type && (o = '<img src="' + AIZ.data.fileBaseUrl + AIZ.uploader.data.allFiles[l].file_name + '">', a[0].insertHTML(o))
            }
        }, dismissUploader: function () {
            $("#aizUploaderModal").on("hidden.bs.modal", function () {
                $(".aiz-uploader-backdrop").remove(), $("#aizUploaderModal").remove()
            })
        }, trigger: function (a = null, t = "", l = "all", o = "", i = !1, s = null, n = null) {
            var a = $(a), i = i, l = l, d = o;
            "" !== d ? AIZ.uploader.data.selectedFiles = d.split(",").map(Number) : AIZ.uploader.data.selectedFiles = [], void 0 !== l && l.length > 0 && (AIZ.uploader.data.type = l), i ? AIZ.uploader.data.multiple = !0 : AIZ.uploader.data.multiple = !1, $.post(AIZ.data.appUrl + "/aiz-uploader", { _token: AIZ.data.csrf }, function (l) {
                $("body").append(l), $("#aizUploaderModal").modal("show"), AIZ.plugins.aizUppy(), AIZ.uploader.getAllUploads(AIZ.data.appUrl + "/aiz-uploader/get_uploaded_files", null, $('[name="aiz-uploader-sort"]').val()), AIZ.uploader.updateUploaderSelected(), AIZ.uploader.clearUploaderSelected(), AIZ.uploader.sortUploaderFiles(), AIZ.uploader.searchUploaderFiles(), AIZ.uploader.showSelectedFiles(), AIZ.uploader.dismissUploader(), AIZ.uploader.handleActiveTabUploader(), AIZ.uploader.setInputIdOnUpload(), $("#uploader_next_btn").on("click", function () {
                    null != AIZ.uploader.data.next_page_url && ($('[name="aiz-show-selected"]').prop("checked", !1), AIZ.uploader.getAllUploads(AIZ.uploader.data.next_page_url))
                }), $("#uploader_prev_btn").on("click", function () {
                    null != AIZ.uploader.data.prev_page_url && ($('[name="aiz-show-selected"]').prop("checked", !1), AIZ.uploader.getAllUploads(AIZ.uploader.data.prev_page_url))
                }), $(".aiz-uploader-search i").on("click", function () {
                    $(this).parent().toggleClass("open")
                }), $('[data-toggle="aizUploaderAddSelected"]').on("click", function () {
                    "input" === t ? AIZ.uploader.inputSelectPreviewGenerate(a) : "direct" === t && s(AIZ.uploader.data.selectedFiles), $("#aizUploaderModal").modal("hide")
                })
            })
        }, initForInput: function () {
            $(document).on("click", '[data-toggle="aizuploader"]', function (a) {
                if (1 === a.detail) {
                    AIZ.uploader.data.inputElem = this;
                    var t = $(this), l = t.data("multiple"), o = t.data("type"), i = t.data("id"),
                        s = t.find(".selected-files").val();
                    l = l || "", o = o || "", s = s || "", AIZ.uploader.trigger(this, "input", o, s, l, null, i)
                }
            })
        }, previewGenerate: function () {
            $('[data-toggle="aizuploader"]').each(function () {
                var a = $(this), t = a.find(".selected-files").val();
                "" != t && $.post(AIZ.data.appUrl + "/aiz-uploader/get_file_by_ids", {
                    _token: AIZ.data.csrf,
                    ids: t
                }, function (t) {
                    if (a.next(".file-preview").html(null), t.length > 0) {
                        a.find(".file-amount").html(AIZ.uploader.updateFileHtml(t));
                        for (var l = 0; l < t.length; l++) {
                            var o = "";
                            o = "image" === t[l].type ? '<img src="' + AIZ.data.fileBaseUrl + t[l].file_name + '" class="img-fit">' : '<i class="la la-file-text"></i>';
                            var i = '<div class="d-flex justify-content-between align-items-center mt-2 file-preview-item" data-id="' + t[l].id + '" title="' + t[l].file_original_name + "." + t[l].extension + '"><div class="align-items-center align-self-stretch d-flex justify-content-center thumb">' + o + '</div><div class="col body"><h6 class="d-flex"><span class="text-truncate title">' + t[l].file_original_name + '</span><span class="ext flex-shrink-0">.' + t[l].extension + "</span></h6><p>" + AIZ.extra.bytesToSize(t[l].file_size) + '</p></div><div class="remove"><button class="btn btn-sm btn-link remove-attachment" type="button"><i class="la la-close"></i></button></div></div>';
                            a.next(".file-preview").append(i)
                        }
                    } else a.find(".file-amount").html(AIZ.local.choose_file)
                })
            })
        }, handleActiveTabUploader: function (a = "all") {
            if (!a) return;
            let t = AIZ.uploader.getNewUploadActiveList();
            Array.isArray(t) && t.includes(a) && AIZ.uploader.showUploadTab()
        }, showUploadTab: function () {
            $('a[href="#aiz-select-file"]').removeClass("active"), $('a[href="#aiz-upload-new"]').addClass("active"), $("#aiz-select-file").removeClass("active"), $("#aiz-upload-new").addClass("active")
        }, getNewUploadActiveList: function () {
            return ["new-product", "edit-product", "all"]
        }, getSelectOnUploadList: function () {
            return ["new-product", "edit-product", "all"]
        }, setInputIdOnUpload: function (a = "all") {
            AIZ.uploader.data.inputId = a
        }, selectUploadedFiles: function () {
            (Array.isArray(AIZ.uploader.data.uploadedFiles) || !(AIZ.uploader.data.uploadedFiles.length < 1)) && (AIZ.uploader.data.uploadedFiles.forEach(a => {
                let t = a.response.body.image_id, l = AIZ.uploader.data.allFiles.filter(a => a.id == t);
                if (l) {
                    if (AIZ.uploader.data.multiple) {
                        AIZ.uploader.data.selectedFiles.push(t), AIZ.uploader.data.selectedFilesObject.push(l);
                        return
                    }
                    AIZ.uploader.data.selectedFiles = [t], AIZ.uploader.data.selectedFilesObject = [l]
                }
            }), AIZ.uploader.updateUploaderSelected(), $('[data-toggle="aizUploaderAddSelected"]').prop("disabled", !1))
        }, changeInputToBeSingleUpload: function () {
            AIZ.uploader.data.multiple || ($(".uppy-Dashboard-input").attr("name", "file"), $(".uppy-Dashboard-input").removeAttr("multiple"))
        }
    }, AIZ.plugins = {
        metismenu: function () {
            $('[data-toggle="aiz-side-menu"]').metisMenu()
        }, bootstrapSelect: function (a = "") {
            $(".aiz-selectpicker").each(function (t) {
                var l = $(this);
                if (!l.parent().hasClass("bootstrap-select")) {
                    var o = l.data("selected");
                    void 0 !== o && l.val(o), l.selectpicker({
                        size: 5,
                        noneSelectedText: AIZ.local.nothing_selected,
                        virtualScroll: !1
                    })
                }
                "refresh" === a && l.selectpicker("refresh"), "destroy" === a && l.selectpicker("destroy")
            })
        }, tagify: function () {
            $(".aiz-tag-input").not(".tagify").each(function () {
                var $this = $(this), maxTags = $this.data("max-tags"), whitelist = $this.data("whitelist"),
                    onchange = $this.data("on-change");
                // maxTags = maxTags || 1 / 0, whitelist = whitelist || [], $this.tagify({
                //     maxTags: maxTags,
                //     whitelist: whitelist,
                //     dropdown: {enabled: 1}
                // });

                //add class w-100 to current element
                this.style.height = "auto";
            
                new Tagify(this, {      
                    delimiters: [","], // or "\n" or whatever you're pasting
                    enforceWhitelist: false,
                    dropdown: { enabled: 0 },
                    pasteAsTags: true, // ✅ this is the key,

                })

                try {
                    callback = eval(onchange)
                } catch (e) {
                    var callback = ""
                }
                "function" == typeof callback && ($this.on("removeTag", function () {
                    callback()
                }), $this.on("add", function () {
                    callback()
                }))
            })
        }, textEditor: function () {
            $(".aiz-text-ckeditor").each(function (a) {
                var t = $(this);
                let l = t.attr("id");
                if (l) {
                    var o = CKEDITOR.replace(l, {
                        toolbar: [["Source", "-", "Save", "NewPage", "Preview", "-", "Templates"], ["Cut", "Copy", "Paste", "PasteText", "PasteFromWord", "-", "Print", "SpellChecker", "Scayt"], ["Undo", "Redo", "-", "Find", "Replace", "-", "SelectAll", "RemoveFormat"], "/", ["Bold", "Italic", "Underline", "Strike", "-", "Subscript", "Superscript"], ["NumberedList", "BulletedList", "-", "Outdent", "Indent", "Blockquote"], ["JustifyLeft", "JustifyCenter", "JustifyRight", "JustifyBlock"], ["Link", "Unlink", "Anchor"], ["Table", "HorizontalRule", "Smiley", "SpecialChar", "PageBreak"], "/", ["Styles", "Format", "Font", "FontSize"], ["TextColor", "BGColor"], ["Maximize", "ShowBlocks", "-", "About"]],
                        language: "ar" == siteLang ? "ar" : siteLang
                    });

                    function i() {
                        if ("ar" == siteLang) {
                            let a = document.getElementsByClassName("cke_combopanel__fontsize").length > 0,
                                t = document.getElementsByClassName("cke_maximized").length > 0;
                            if (t) {
                                setTimeout(() => {
                                    i()
                                }, 300);
                                let l = document.getElementsByClassName("cke_combopanel__font").length > 0,
                                    o = document.getElementsByClassName("cke_combopanel__format").length > 0,
                                    s = document.getElementsByClassName("cke_combopanel__styles").length > 0;
                                a ? ($(".cke_combopanel").addClass("font_size_place"), $(".cke_combopanel").removeClass("format"), $(".cke_combopanel").removeClass("font_place"), $(".cke_combopanel").removeClass("styles")) : l ? ($(".cke_combopanel").addClass("font_place"), $(".cke_combopanel").removeClass("format"), $(".cke_combopanel").removeClass("font_size_place"), $(".cke_combopanel").removeClass("styles")) : o ? ($(".cke_combopanel").addClass("format"), $(".cke_combopanel").removeClass("font_place"), $(".cke_combopanel").removeClass("font_size_place"), $(".cke_combopanel").removeClass("styles")) : s ? ($(".cke_combopanel").addClass("styles"), $(".cke_combopanel").removeClass("font_place"), $(".cke_combopanel").removeClass("font_size_place"), $(".cke_combopanel").removeClass("format")) : ($(".cke_panel").addClass("new_style"), $(".cke_combopanel").removeClass("font_place"), $(".cke_combopanel").removeClass("font_size_place"), $(".cke_combopanel").removeClass("format"), $(".cke_combopanel").removeClass("styles"))
                            } else $(".cke_combopanel").removeClass("font_place"), $(".cke_combopanel").removeClass("font_size_place"), $(".cke_combopanel").removeClass("format"), $(".cke_combopanel").removeClass("styles"), $(".cke_panel").removeClass("new_style"), setTimeout(() => {
                                i()
                            }, 1500)
                        }
                    }

                    o.on("change", function (a) {
                        o.updateElement()
                    }), o.on("maximize", function (a) {
                        i()
                    })
                }
            }), $(".aiz-text-editor").each(function (a) {
                var t = $(this), l = t.data("buttons"), o = t.data("min-height"), i = t.attr("placeholder"),
                    s = t.data("format");
                l = l || [["fontname", ["fontname"]], ["font", ["bold", "underline", "italic", "clear"]], ["para", ["ul", "ol", "paragraph"]], ["style", ["style"]], ["color", ["color"]], ["table", ["table"]], ["insert", ["link", "picture", "video"]], ["view", ["fullscreen", "undo", "redo"]],], i = i || "", o = o || 200, s = void 0 !== s && s, t.summernote({
                    toolbar: l,
                    placeholder: i,
                    height: o,
                    callbacks: {
                        onImageUpload: function (a) {
                            a.pop()
                        }, onPaste: function (a) {
                            if (s) {
                                var t = ((a.originalEvent || a).clipboardData || window.clipboardData).getData("Text");
                                a.preventDefault(), document.execCommand("insertText", !1, t)
                            }
                        }
                    }
                });
                var n = t.summernote("module", "videoDialog").createVideoNode;
                t.summernote("module", "videoDialog").createVideoNode = function (a) {
                    var t = $('<div class="embed-responsive embed-responsive-16by9"></div>'), l = n(a);
                    return l = $(l).addClass("embed-responsive-item"), t.append(l)[0]
                }
            })
        }, dateRange: function () {
            $(".aiz-date-range").each(function () {
                var a = $(this), t = moment().startOf("day");
                a.val();
                var l = !1, o = !1, i = !1, s = {
                    Today: [moment(), moment()],
                    Yesterday: [moment().subtract(1, "days"), moment().subtract(1, "days"),],
                    "Last 7 Days": [moment().subtract(6, "days"), moment()],
                    "Last 30 Days": [moment().subtract(29, "days"), moment()],
                    "This Month": [moment().startOf("month"), moment().endOf("month"),],
                    "Last Month": [moment().subtract(1, "month").startOf("month"), moment().subtract(1, "month").endOf("month"),]
                }, n = a.data("single"), d = a.data("show-dropdown"), r = a.data("format"), c = a.data("separator"),
                    p = a.data("past-disable"), u = a.data("future-disable"), f = a.data("time-picker"),
                    m = a.data("time-gap"), i = a.data("advanced-range");
                n = !!n && n, d = !!d && d, r = r || "YYYY-MM-DD", c = c || " / ", l = p ? t : l, o = u ? t : o, f = !!f && f, m = m || 1, s = i ? s : "", a.daterangepicker({
                    singleDatePicker: n,
                    showDropdowns: d,
                    minDate: l,
                    maxDate: o,
                    timePickerIncrement: m,
                    autoUpdateInput: !1,
                    ranges: s,
                    locale: { format: r, separator: c, applyLabel: "Select", cancelLabel: "Clear" }
                }), n ? a.on("apply.daterangepicker", function (t, l) {
                    a.val(l.startDate.format(r))
                }) : a.on("apply.daterangepicker", function (t, l) {
                    a.val(l.startDate.format(r) + c + l.endDate.format(r))
                }), a.on("cancel.daterangepicker", function (t, l) {
                    a.val("")
                })
            })
        }, timePicker: function () {
            $(".aiz-time-picker").each(function () {
                var a = $(this), t = a.data("minute-step"), l = a.data("default");
                t = t || 10, l = l || "00:00", a.timepicker({
                    template: "dropdown",
                    minuteStep: t,
                    defaultTime: l,
                    icons: { up: "las la-angle-up", down: "las la-angle-down" },
                    showInputs: !1
                })
            })
        }, fooTable: function () {
            $(".aiz-table").each(function () {
                var a = $(this), t = a.data("empty");
                t = t || AIZ.local.nothing_found, a.footable({
                    breakpoints: {
                        xs: 576,
                        sm: 768,
                        md: 992,
                        lg: 1200,
                        xl: 1400,
                        xxl: 1600
                    }, cascade: !0, on: {
                        "ready.ft.table": function (a, t) {
                            AIZ.extra.deleteConfirm(), AIZ.plugins.bootstrapSelect("refresh")
                        }
                    }, empty: t
                })
            })
        }, notify: function (a = "dark", t = "") {
            $.notify({ message: t }, {
                showProgressbar: !0,
                delay: 2500,
                mouse_over: "pause",
                placement: { from: "bottom", align: "left" },
                animate: { enter: "animated fadeInUp", exit: "animated fadeOutDown" },
                type: a,
                template: '<div data-notify="container" class="aiz-notify alert alert-{0}" role="alert"><button type="button" aria-hidden="true" data-notify="dismiss" class="close"><i class="las la-times"></i></button><span data-notify="message">{2}</span><div class="progress" data-notify="progressbar"><div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;"></div></div></div>'
            })

        },
        swal: function (type = "dark", message = "") {
            if (type == 'danger')
                type = 'error';
            Swal.fire({
                icon: type,
                // title: message,
                html: message,
                showConfirmButton: false,
                timer: 2000,
            });
        },
        aizUppy: function () {
            if ($("#aiz-upload-files").length > 0) {
                var a = Uppy.Core({ autoProceed: !0 });
                a.use(Uppy.Dashboard, {
                    target: "#aiz-upload-files",
                    inline: !0,
                    showLinkToFileUploadResult: !1,
                    showProgressDetails: !0,
                    hideCancelButton: !0,
                    hidePauseResumeButton: !0,
                    hideUploadButton: !0,
                    proudlyDisplayPoweredByUppy: !1,
                    locale: {
                        strings: {
                            addMoreFiles: AIZ.local.add_more_files,
                            addingMoreFiles: AIZ.local.adding_more_files,
                            dropPaste: AIZ.local.drop_files_here_paste_or + " %{browse}",
                            browse: AIZ.local.browse,
                            uploadComplete: AIZ.local.upload_complete,
                            uploadPaused: AIZ.local.upload_paused,
                            resumeUpload: AIZ.local.resume_upload,
                            pauseUpload: AIZ.local.pause_upload,
                            retryUpload: AIZ.local.retry_upload,
                            cancelUpload: AIZ.local.cancel_upload,
                            xFilesSelected: {
                                0: "%{smart_count} " + AIZ.local.file_selected,
                                1: "%{smart_count} " + AIZ.local.files_selected
                            },
                            uploadingXFiles: {
                                0: AIZ.local.uploading + " %{smart_count} " + AIZ.local.file,
                                1: AIZ.local.uploading + " %{smart_count} " + AIZ.local.files
                            },
                            processingXFiles: {
                                0: AIZ.local.processing + " %{smart_count} " + AIZ.local.file,
                                1: AIZ.local.processing + " %{smart_count} " + AIZ.local.files
                            },
                            uploading: AIZ.local.uploading,
                            complete: AIZ.local.complete
                        }
                    }
                }), a.use(Uppy.XHRUpload, {
                    endpoint: AIZ.data.appUrl + "/aiz-uploader/upload",
                    fieldName: "aiz_file",
                    formData: !0,
                    headers: { "X-CSRF-TOKEN": AIZ.data.csrf }
                });
                var t = 1;
                a.on("upload", a => {
                    if (t) {
                        t--;
                        let l = AIZ.uploader.getSelectOnUploadList();
                        Array.isArray(l) && l.includes(AIZ.uploader.data.inputId) && $('[data-toggle="aizUploaderAddSelected"]').prop("disabled", !0)
                    }
                }), a.on("upload-success", function () {
                    AIZ.uploader.getAllUploads(AIZ.data.appUrl + "/aiz-uploader/get_uploaded_files")
                }), a.on("complete", a => {
                    if (!a.successful.length) return;
                    let t = AIZ.uploader.getSelectOnUploadList();
                    Array.isArray(t) && t.includes(AIZ.uploader.data.inputId) && (AIZ.uploader.data.uploadedFiles = a.successful, AIZ.uploader.getAllUploads(AIZ.data.appUrl + "/aiz-uploader/get_uploaded_files", null, null, "select_uploaded"))
                });
                let l = AIZ.uploader.getSelectOnUploadList();
                Array.isArray(l) && l.includes(AIZ.uploader.data.inputId) && AIZ.uploader.changeInputToBeSingleUpload()
            }
        }, tooltip: function () {
            $("body").tooltip({ selector: '[data-toggle="tooltip"]' }).click(function () {
                $('[data-toggle="tooltip"]').tooltip("hide")
            })
        }, countDown: function () {
            $(".aiz-count-down").length > 0 && $(".aiz-count-down").each(function () {
                var a = $(this), t = a.data("date");
                a.countdown(t).on("update.countdown", function (a) {
                    $(this).html(a.strftime('<div class="countdown-item"><span class="countdown-digit">%-D</span></div><span class="countdown-separator">:</span><div class="countdown-item"><span class="countdown-digit">%H</span></div><span class="countdown-separator">:</span><div class="countdown-item"><span class="countdown-digit">%M</span></div><span class="countdown-separator">:</span><div class="countdown-item"><span class="countdown-digit">%S</span></div>'))
                })
            })
        }, slickCarousel: function () {
            $(".aiz-carousel").not(".slick-initialized").each(function () {
                var a = $(this), t = a.data("xs-items"), l = a.data("sm-items"), o = a.data("md-items"),
                    i = a.data("lg-items"), s = a.data("xl-items"), n = a.data("items"), d = a.data("slides-to-scroll"),
                    r = a.data("center"), c = a.data("arrows"), p = a.data("dots"), u = a.data("rows"),
                    f = a.data("autoplay"), m = a.data("fade"), h = a.data("nav-for"), v = a.data("infinite"),
                    g = a.data("focus-select"), b = a.data("auto-height"), y = a.data("vertical"),
                    k = a.data("vertical-xs"), x = a.data("vertical-sm"), w = a.data("vertical-md"),
                    C = a.data("vertical-lg"), z = a.data("vertical-xl");
                n = n || 1, s = s || n, i = i || s, o = o || i, l = l || o, t = t || l, y = !!y && y, z = void 0 === z ? y : z, C = void 0 === C ? z : C, w = void 0 === w ? C : w, x = void 0 === x ? w : x, k = void 0 === k ? x : k, r = !!r && r, c = !!c && c, p = !!p && p, u = u || 1, f = !!f && f, m = !!m && m, h = h || null, v = !!v && v, g = !!g && g, b = !!b && b, d = d || 1;
                var F = "rtl" === $("html").attr("dir") && !y, S = "rtl" === $("html").attr("dir") && !z,
                    U = "rtl" === $("html").attr("dir") && !C, T = "rtl" === $("html").attr("dir") && !w,
                    _ = "rtl" === $("html").attr("dir") && !x, A = "rtl" === $("html").attr("dir") && !k;
                a.slick({
                    slidesToShow: n,
                    autoplay: f,
                    dots: p,
                    arrows: c,
                    infinite: v,
                    vertical: y,
                    rtl: F,
                    rows: u,
                    centerPadding: "0px",
                    centerMode: r,
                    fade: m,
                    asNavFor: h,
                    focusOnSelect: g,
                    adaptiveHeight: b,
                    slidesToScroll: d,
                    prevArrow: '<button type="button" class="mx-2 slick-prev"><i class="las la-angle-left"></i></button>',
                    nextArrow: '<button type="button" class="mx-2 slick-next"><i class="las la-angle-right"></i></button>',
                    responsive: [{
                        breakpoint: 1500,
                        settings: { slidesToShow: s, vertical: z, rtl: S }
                    }, { breakpoint: 1200, settings: { slidesToShow: i, vertical: C, rtl: U } }, {
                        breakpoint: 992,
                        settings: { slidesToShow: o, vertical: w, rtl: T }
                    }, { breakpoint: 768, settings: { slidesToShow: l, vertical: x, rtl: _ } }, {
                        breakpoint: 576,
                        settings: { slidesToShow: t, vertical: k, rtl: A }
                    },]
                })
            })
        }, chart: function (a, t) {
            $(a).length && $(a).each(function () {
                var a = $(this);
                new Chart(a, t)
            })
        }, noUiSlider: function () {
            $(".aiz-range-slider")[0] && $(".aiz-range-slider").each(function () {
                var a = document.getElementById("input-slider-range"),
                    t = document.getElementById("input-slider-range-value-low"),
                    l = document.getElementById("input-slider-range-value-high"), o = [t, l];
                noUiSlider.create(a, {
                    start: [parseInt(t.getAttribute("data-range-value-low")), parseInt(l.getAttribute("data-range-value-high")),],
                    connect: !0,
                    range: {
                        min: parseInt(a.getAttribute("data-range-value-min")),
                        max: parseInt(a.getAttribute("data-range-value-max"))
                    }
                }), a.noUiSlider.on("update", function (a, t) {
                    o[t].textContent = a[t]
                }), a.noUiSlider.on("change", function (a, t) {
                    rangefilter(a)
                })
            })
        }, zoom: function () {
            $(".img-zoom")[0] && ($(".img-zoom").zoom({ magnify: 1.5 }), ("ontouchstart" in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0) && $(".img-zoom").trigger("zoom.destroy"))
        }, jsSocials: function () {
            $(".aiz-share")[0] && $(".aiz-share").jsSocials({
                showLabel: !1,
                showCount: !1,
                shares: [{ share: "email", logo: "lar la-envelope" }, {
                    share: "twitter",
                    logo: "lab la-twitter"
                }, { share: "facebook", logo: "lab la-facebook-f" }, {
                    share: "linkedin",
                    logo: "lab la-linkedin-in"
                }, { share: "whatsapp", logo: "lab la-whatsapp" }]
            })
        }
    }, AIZ.extra = {
        refreshToken: function () {
            $.get(AIZ.data.appUrl + "/refresh-csrf").done(function (a) {
                AIZ.data.csrf = a
            })
        }, mobileNavToggle: function () {
            window.matchMedia("(max-width: 1200px)").matches && $("body").addClass("side-menu-closed"), $('[data-toggle="aiz-mobile-nav"]').on("click", function () {
                $("body").hasClass("side-menu-open") ? $("body").addClass("side-menu-closed").removeClass("side-menu-open") : $("body").hasClass("side-menu-closed") ? $("body").removeClass("side-menu-closed").addClass("side-menu-open") : $("body").removeClass("side-menu-open").addClass("side-menu-closed")
            }), $(".aiz-sidebar-overlay").on("click", function () {
                $("body").removeClass("side-menu-open").addClass("side-menu-closed")
            })
        }, initActiveMenu: function () {
            $('[data-toggle="aiz-side-menu"] a').each(function () {
                var a = window.location.href.split(/[?#]/)[0];
                (this.href == a || $(this).hasClass("active")) && ($(this).addClass("active"), $(this).closest(".aiz-side-nav-item").addClass("mm-active"), $(this).closest(".level-2").siblings("a").addClass("level-2-active"), $(this).closest(".level-3").siblings("a").addClass("level-3-active"))
            })
        }, deleteConfirm: function () {
            $(".confirm-delete").click(function (a) {
                a.preventDefault();
                var t = $(this).data("href");
                $("#delete-modal").modal("show"), $("#delete-link").attr("href", t)
            }), $(".confirm-cancel").click(function (a) {
                a.preventDefault();
                var t = $(this).data("href");
                $("#cancel-modal").modal("show"), $("#cancel-link").attr("href", t)
            }), $(".confirm-complete").click(function (a) {
                a.preventDefault();
                var t = $(this).data("href");
                $("#complete-modal").modal("show"), $("#comfirm-link").attr("href", t)
            }), $(".confirm-alert").click(function (a) {
                a.preventDefault();
                var t = $(this).data("href"), l = $(this).data("target");
                $(l).modal("show"), $(l).find(".comfirm-link").attr("href", t), $("#comfirm-link").attr("href", t)
            })
        }, bytesToSize: function (a) {
            var t = ["Bytes", "KB", "MB", "GB", "TB"];
            if (0 == a) return "0 Byte";
            var l = parseInt(Math.floor(Math.log(a) / Math.log(1024)));
            return Math.round(a / Math.pow(1024, l), 2) + " " + t[l]
        }, multiModal: function () {
            $(document).on("show.bs.modal", ".modal", function (a) {
                var t = 1040 + 10 * $(".modal:visible").length;
                $(this).css("z-index", t), setTimeout(function () {
                    $(".modal-backdrop").not(".modal-stack").css("z-index", t - 1).addClass("modal-stack")
                }, 0)
            }), $(document).on("hidden.bs.modal", function () {
                $(".modal.show").length > 0 && $("body").addClass("modal-open")
            })
        }, bsCustomFile: function () {
            $(".custom-file input").change(function (a) {
                for (var t = [], l = 0; l < $(this)[0].files.length; l++) t.push($(this)[0].files[l].name);
                1 === t.length ? $(this).next(".custom-file-name").html(t[0]) : t.length > 1 ? $(this).next(".custom-file-name").html(t.length + " " + AIZ.local.files_selected) : $(this).next(".custom-file-name").html(AIZ.local.choose_file)
            })
        }, stopPropagation: function () {
            $(document).on("click", ".stop-propagation", function (a) {
                a.stopPropagation()
            })
        }, outsideClickHide: function () {
            $(document).on("click", function (a) {
                $(".document-click-d-none").addClass("d-none")
            })
        }, inputRating: function () {
            $(".rating-input").each(function () {
                $(this).find("label").on({
                    mouseover: function (a) {
                        $(this).find("i").addClass("hover"), $(this).prevAll().find("i").addClass("hover")
                    }, mouseleave: function (a) {
                        $(this).find("i").removeClass("hover"), $(this).prevAll().find("i").removeClass("hover")
                    }, click: function (a) {
                        $(this).siblings().find("i").removeClass("active"), $(this).find("i").addClass("active"), $(this).prevAll().find("i").addClass("active")
                    }
                }), $(this).find("input").is(":checked") && ($(this).find("label").siblings().find("i").removeClass("active"), $(this).find("input:checked").closest("label").find("i").addClass("active"), $(this).find("input:checked").closest("label").prevAll().find("i").addClass("active"))
            })
        }, scrollToBottom: function () {
            $(".scroll-to-btm").each(function (a, t) {
                t.scrollTop = t.scrollHeight
            })
        }, classToggle: function () {
            $(document).on("click", '[data-toggle="class-toggle"]', function () {
                var a = $(this), t = a.data("target"), l = a.data("same"), o = $(this).data("backdrop");
                $(t).hasClass("active") ? ($(t).removeClass("active"), $(l).removeClass("active"), a.removeClass("active"), $("body").removeClass("overflow-hidden")) : ($(t).addClass("active"), a.addClass("active"), "static" == o && $("body").addClass("overflow-hidden"))
            })
        }, collapseSidebar: function () {
            $(document).on("click", '[data-toggle="collapse-sidebar"]', function (a, t) {
                var l = $(this), o = $(this).data("target"), i = $(this).data("siblings");
                e.preventDefault(), $(o).hasClass("opened") ? ($(o).removeClass("opened"), $(i).removeClass("opened"), $(l).removeClass("opened")) : ($(o).addClass("opened"), $(l).addClass("opened"))
            })
        }, autoScroll: function () {
            $(".aiz-auto-scroll").length > 0 && $(".aiz-auto-scroll").each(function () {
                var a = $(this).data("options");
                a = JSON.parse(a = a || '{"delay" : 2000 ,"amount" : 70 }'), this.delay = parseInt(a.delay) || 2e3, this.amount = parseInt(a.amount) || 70, this.autoScroll = $(this), this.iScrollHeight = this.autoScroll.prop("scrollHeight"), this.iScrollTop = this.autoScroll.prop("scrollTop"), this.iHeight = this.autoScroll.height();
                var t = this;
                this.timerId = setInterval(function () {
                    t.iScrollTop + t.iHeight < t.iScrollHeight ? (t.iScrollTop = t.autoScroll.prop("scrollTop"), t.iScrollTop += t.amount, t.autoScroll.animate({ scrollTop: t.iScrollTop }, "slow", "linear")) : (t.iScrollTop -= t.iScrollTop, t.autoScroll.animate({ scrollTop: "0px" }, "fast", "swing"))
                }, t.delay)
            })
        }, addMore: function () {
            $('[data-toggle="add-more"]').each(function () {
                var a = $(this), t = a.data("content"), l = a.data("target");
                a.on("click", function (a) {
                    a.preventDefault(), $(l).append(t), AIZ.plugins.bootstrapSelect()
                })
            })
        }, removeParent: function () {
            $(document).on("click", '[data-toggle="remove-parent"]', function () {
                var a = $(this), t = a.data("parent");
                a.closest(t).remove()
            })
        }, selectHideShow: function () {
            $('[data-show="selectShow"]').each(function () {
                var a = $(this).data("target");
                $(this).on("change", function () {
                    var t = $(this).val();
                    $(a).children().not("." + t).addClass("d-none"), $(a).find("." + t).removeClass("d-none")
                })
            })
        }, plusMinus: function () {
            $(".aiz-plus-minus input").each(function () {
                var a = $(this), t = parseInt($(this).attr("min")), l = parseInt($(this).attr("max")),
                    o = parseInt($(this).val());
                o <= t && a.siblings('[data-type="minus"]').attr("disabled", !0), o >= l && a.siblings('[data-type="plus"]').attr("disabled", !0)
            }), $(".aiz-plus-minus button").on("click", function (a) {
                a.preventDefault();
                var t = $(this).attr("data-field"), l = $(this).attr("data-type"), o = $("input[name='" + t + "']"),
                    i = parseInt(o.val());
                isNaN(i) ? o.val(0) : "minus" == l ? (i > o.attr("min") && o.val(i - 1).change(), parseInt(o.val()) == o.attr("min") && $(this).attr("disabled", !0)) : "plus" == l && (i < o.attr("max") && o.val(i + 1).change(), parseInt(o.val()) == o.attr("max") && $(this).attr("disabled", !0))
            }), $(".aiz-plus-minus input").on("change", function () {
                var a = parseInt($(this).attr("min")), t = parseInt($(this).attr("max")), l = parseInt($(this).val());
                name = $(this).attr("name"), l >= a ? $(this).siblings("[data-type='minus']").removeAttr("disabled") : (alert("Sorry, the minimum limit has been reached"), $(this).val(a)), l <= t ? $(this).siblings("[data-type='plus']").removeAttr("disabled") : (alert("Sorry, the maximum limit has been reached"), $(this).val(t))
            })
        }, trimAppUrl: function () {
            "/" == AIZ.data.appUrl.slice(-1) && (AIZ.data.appUrl = AIZ.data.appUrl.slice(0, AIZ.data.appUrl.length - 1))
        }, setCookie: function (a, t, l) {
            var o = new Date;
            o.setTime(o.getTime() + 864e5 * l);
            var i = "expires=" + o.toUTCString();
            document.cookie = a + "=" + t + ";" + i + ";path=/"
        }, getCookie: function (a) {
            for (var t = a + "=", l = decodeURIComponent(document.cookie).split(";"), o = 0; o < l.length; o++) {
                for (var i = l[o]; " " === i.charAt(0);) i = i.substring(1);
                if (0 === i.indexOf(t)) return i.substring(t.length, i.length)
            }
            return ""
        }, acceptCookie: function () {
            AIZ.extra.getCookie("acceptCookies") || $(".aiz-cookie-alert").addClass("show"), $(".aiz-cookie-accept").on("click", function () {
                AIZ.extra.setCookie("acceptCookies", !0, 60), $(".aiz-cookie-alert").removeClass("show")
            })
        }, setSession: function () {
            $(".set-session").each(function () {
                var a = $(this), t = a.data("key"), l = a.data("value");
                let o = new Date, i = { value: l, expiry: o.getTime() + 36e5 };
                a.on("click", function () {
                    localStorage.setItem(t, JSON.stringify(i))
                })
            })
        }, showSessionPopup: function () {
            $(".removable-session").each(function () {
                var a = $(this), t = a.data("key");
                a.data("value");
                var l = {};
                localStorage.getItem(t) && (l = JSON.parse(l = localStorage.getItem(t)));
                let o = new Date;
                (void 0 === l.expiry || o.getTime() > l.expiry) && a.removeClass("d-none")
            })
        }
    }, setInterval(function () {
        AIZ.extra.refreshToken()
    }, 36e5), AIZ.extra.initActiveMenu(), AIZ.extra.mobileNavToggle(), AIZ.extra.deleteConfirm(), AIZ.extra.multiModal(), AIZ.extra.inputRating(), AIZ.extra.bsCustomFile(), AIZ.extra.stopPropagation(), AIZ.extra.outsideClickHide(), AIZ.extra.scrollToBottom(), AIZ.extra.classToggle(), AIZ.extra.collapseSidebar(), AIZ.extra.autoScroll(), AIZ.extra.addMore(), AIZ.extra.removeParent(), AIZ.extra.selectHideShow(), AIZ.extra.plusMinus(), AIZ.extra.trimAppUrl(), AIZ.extra.acceptCookie(), AIZ.extra.setSession(), AIZ.extra.showSessionPopup(), AIZ.plugins.metismenu(), AIZ.plugins.bootstrapSelect(), AIZ.plugins.tagify(), AIZ.plugins.textEditor(), AIZ.plugins.tooltip(), AIZ.plugins.countDown(), AIZ.plugins.dateRange(), AIZ.plugins.timePicker(), AIZ.plugins.fooTable(), AIZ.plugins.slickCarousel(), AIZ.plugins.noUiSlider(), AIZ.plugins.zoom(), AIZ.plugins.jsSocials(), AIZ.uploader.initForInput(), AIZ.uploader.removeAttachment(), AIZ.uploader.previewGenerate()
}(jQuery);
